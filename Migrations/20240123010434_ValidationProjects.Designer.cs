// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaskHubAPI.Context;

namespace TaskHubAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240123010434_ValidationProjects")]
    partial class ValidationProjects
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TaskHubAPI.Models.Project", b =>
                {
                    b.Property<int>("IdProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("CreatedByUserUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateOfCriation")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("IdUserCreated")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("IdProject");

                    b.HasIndex("CreatedByUserUserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("TaskHubAPI.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ProjectIdProject")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("TaskId");

                    b.HasIndex("ProjectIdProject");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskHubAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("DateCreateAccount")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int?>("ProjectIdProject")
                        .HasColumnType("integer");

                    b.HasKey("UserId");

                    b.HasIndex("ProjectIdProject");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TaskHubAPI.Models.Project", b =>
                {
                    b.HasOne("TaskHubAPI.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserUserId");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("TaskHubAPI.Models.Task", b =>
                {
                    b.HasOne("TaskHubAPI.Models.Project", null)
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectIdProject");

                    b.HasOne("TaskHubAPI.Models.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskHubAPI.Models.User", b =>
                {
                    b.HasOne("TaskHubAPI.Models.Project", null)
                        .WithMany("Users")
                        .HasForeignKey("ProjectIdProject");
                });

            modelBuilder.Entity("TaskHubAPI.Models.Project", b =>
                {
                    b.Navigation("Tasks");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TaskHubAPI.Models.User", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
